version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app               # Mount source code for hot reloading
      - backend_storage:/app/media
      - backend_static:/app/staticfiles
      - backend_data:/app/data
      - backend_logs:/app/logs
    env_file:
      - ./backend/.env
    environment:
      PYTHONPATH: /app
      DJANGO_SETTINGS_MODULE: core.settings
      RUN_MIGRATIONS: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      redis:
        condition: service_healthy
    restart: always

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8000/api
    volumes:
      - ./frontend:/app               # Mount code for hot reloading
      - /app/node_modules
    depends_on:
      - backend
    restart: always

  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:10.1.5
    container_name: grafana
    ports:
      - "3001:3000"  # Grafana default port is 3000, exposing on 3001 to avoid conflict with frontend
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  backend_storage:
  backend_static:
  backend_data:
  backend_logs:
  redis_data:
  prometheus_data:
  grafana_data:
